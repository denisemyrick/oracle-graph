plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
}

version = "0.1"
group = "com.oracle.example"

ext {
    jdbc_url = project.findProperty('jdbc_url')
    username = project.findProperty('username')
    password = project.findProperty('password')
}

repositories {
    mavenCentral()
    maven { url "https://artifacts.metaborg.org/content/repositories/releases" }
    maven { url "https://artifacts.metaborg.org/content/repositories/usethesource/" }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-validation")
    implementation("com.oracle.database.graph:opg-client:23.1.0")
    implementation("commons-io:commons-io:2.11.0")
}

application {
    mainClass.set("com.oracle.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.oracle.example.*")
    }
}

task createHrDataSetAndPgView(type: JavaExec) {
    outputs.upToDateWhen { false }

    environment("JDBC_URL", jdbc_url)
    environment("USERNAME", username)
    environment("PASSWORD", password)
    mainClass.set("com.oracle.scripts.RunCreateScripts")
    classpath = sourceSets.main.runtimeClasspath
}

task dropHrDataSetAndPgView(type: JavaExec) {
    outputs.upToDateWhen { false }

    environment("JDBC_URL", jdbc_url)
    environment("USERNAME", username)
    environment("PASSWORD", password)
    mainClass.set("com.oracle.scripts.RunDropScripts")
    classpath = sourceSets.main.runtimeClasspath
}


